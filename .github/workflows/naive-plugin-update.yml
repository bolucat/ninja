on:
  push:
    paths:
      - '.github/workflows/naive-plugin-update.yml'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Naive Version Name'
        required: true

name: Mirror Sync
jobs:
  mkvtoolnix:
    runs-on: ubuntu-22.04
    steps:
      
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login into Github && Update Naive Core
        run: |
          wget -qO- https://api.github.com/repos/cli/cli/releases/latest | jq ".assets[] | {browser_download_url}" -c | jq .browser_download_url -r | grep "linux_amd64.tar.gz" | wget -i -
          mkdir -p gh && tar -zxf gh_*.tar.gz -C gh/ --strip-components=1
          mv gh/bin/gh github && rm -rf gh*
          git config --global user.email "${{ secrets.EMAIL }}"
          git config --global user.name "bolucat"
          echo ${{ secrets.TOKEN }} > token.txt
          chmod +x github && ./github auth login -p https --hostname "github.com" --with-token < token.txt
          rm -rf token.txt && ./github auth status
          git clone https://github.com/bolucat/SagerNet SagerNet
          pushd SagerNet/plugin/naive/src/main/jni || exit 1
          rm -rf naiveproxy
          git clone https://github.com/klzgrad/naiveproxy naiveproxy
          popd || exit 1
          pushd SagerNet || exit 1
          ORIGIN_NAIVE_VERSION_NAME=$(cat sager.properties | grep -w "NAIVE_VERSION_NAME" | cut -d\= -f2)
          ORIGIN_NAIVE_VERSION=$(cat sager.properties | grep -w "NAIVE_VERSION" | cut -d\= -f2)
          NEW_NAIVE_VERSION_NAME=${{ github.event.inputs.tag }}
          NEW_NAIVE_VERSION=$((${ORIGIN_NAIVE_VERSION}+1))
          sed "s/${ORIGIN_NAIVE_VERSION_NAME}/${NEW_NAIVE_VERSION_NAME}/g" -i sager.properties
          sed "s/${ORIGIN_NAIVE_VERSION}/${NEW_NAIVE_VERSION}/g" -i sager.properties
          git add .
          git commit -am "update naive core to v${NEW_NAIVE_VERSION_NAME}"
          git push -u origin dev "https://bolucat:${{ secrets.TOKEN }}@github.com/bolucat/SagerNet"
          popd || exit 1
